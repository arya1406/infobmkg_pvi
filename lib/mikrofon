import 'package:flutter/material.dart';
import 'package:speech_to_text/speech_to_text.dart' as stt;
import 'home.dart';

class MicButton extends StatefulWidget {
  MicButton({Key key}) : super(key: key);

  @override
  _MicButtonState createState() => _MicButtonState();
}

class _MicButtonState extends State<MicButton> {
  bool _isListening = false;
  stt.SpeechToText _speech;

  void _listen() async {
    if (!_isListening) {
      bool available = await _speech.initialize(
          onStatus: (val) => print('onStatus: $val'),
          onError: (val) => print('onError: $val'));
      if (available) {
        setState(() => _isListening = true);
        _speech.listen(
            onResult: (val) => setState(() {
                  text = val.recognizedWords;
                }));
      }
    } else {
      setState(() => _isListening = false);
      _speech.stop();
    }
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
        onTapDown: (details) {
          setState(() {
            isPressed = !isPressed;
          });
        },
        onTapUp: (details) {
          setState(() {
            isPressed = !isPressed;
          });
        },
        onTapCancel: () {
          setState(() {
            isPressed = !isPressed;
          });
        },
        child: Semantics(
          container: true,
          label: 'tombol mikrofon',
          child: Material(
              borderRadius: BorderRadius.circular(400),
              elevation: (isPressed) ? 5 : 10,
              color: (isPressed) ? Colors.grey : Color(0xfffffc00),
              child: InkWell(
                  borderRadius: BorderRadius.circular(400),
                  onTap: _listen,
                  child: Image(
                    image: AssetImage('images/mic.png'),
                    //semanticLabel: 'Tombol Mikrofon',
                  ))),
        ));
  }
}
